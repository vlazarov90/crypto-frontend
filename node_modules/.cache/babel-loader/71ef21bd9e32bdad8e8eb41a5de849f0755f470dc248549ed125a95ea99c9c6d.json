{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container mt-5\"\n};\nconst _hoisted_2 = {\n  class: \"text-center mb-4\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_PriceChart = _resolveComponent(\"PriceChart\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[0] || (_cache[0] = _createElementVNode(\"h1\", null, \"Real-time Bitcoin Prices\", -1)), _createElementVNode(\"p\", {\n    class: _normalizeClass([\"current-price\", $options.priceDirection])\n  }, \" Current Price: \" + _toDisplayString($data.price ? `$${$data.price}` : 'Loading...'), 3)]), _ctx.historicalData !== null ? (_openBlock(), _createBlock(_component_PriceChart, {\n    key: 0\n  })) : _createCommentVNode(\"\", true)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_normalizeClass","$options","priceDirection","_toDisplayString","$data","price","_ctx","historicalData","_createBlock","_component_PriceChart","key","_createCommentVNode"],"sources":["/Users/veselinlazarov/projects/CryptoDashboard/crypto-dashboard-frontend/src/components/CryptoPrice.vue"],"sourcesContent":["<template>\n  <div class=\"container mt-5\">\n    <div class=\"text-center mb-4\">\n      <h1>Real-time Bitcoin Prices</h1>\n      <p class=\"current-price\" :class=\"priceDirection\">\n        Current Price: {{ price ? `$${price}` : 'Loading...' }}\n      </p>\n    </div>\n    <PriceChart v-if=\"historicalData !== null\" />\n  </div>\n</template>\n\n<script>\nimport signalrService from \"@/services/signalrService\";\nimport PriceChart from './PriceChart.vue';\nimport { mapActions, mapGetters } from 'vuex';\n\nexport default {\n  components: { PriceChart },\n  data() {\n    return {\n      price: null,\n      previousPrice: null,\n      lastPriceDirection: '',\n    };\n  },\n  computed: {\n    ...mapGetters(['historicalData',]),\n    priceDirection() {\n      if (this.previousPrice === null) return '';\n\n      // Check the current price against the previous price\n      if (this.price > this.previousPrice) {\n        return 'text-success'; // Price increased\n      } else if (this.price < this.previousPrice) {\n        return 'text-danger'; // Price decreased\n      }\n\n      // If the price hasn't changed, return the last direction\n      return this.lastPriceDirection;\n    }\n  },\n  watch: {\n    // Watch for changes in price\n    price(newPrice) {\n      if (this.previousPrice !== null) {\n        // Update lastPriceDirection based on the new price\n        if (newPrice > this.previousPrice) {\n          this.lastPriceDirection = 'text-success';\n        } else if (newPrice < this.previousPrice) {\n          this.lastPriceDirection = 'text-danger';\n        }\n      }\n\n      // Update previousPrice to the new price\n      this.previousPrice = newPrice;\n    }\n  },\n  methods: {\n    ...mapActions(['fetchHistoricalData'])\n  },\n  mounted() {\n    this.fetchHistoricalData();\n    signalrService.start()\n      .then(() => {\n        signalrService.on(\"ReceivePriceUpdate\", (price) => {\n          this.previousPrice = this.price;\n          this.price = JSON.parse(price).bpi.USD.rate;\n        });\n      })\n      .catch(err => console.error(\"SignalR connection failed: \", err));\n  }\n};\n</script>\n\n<style scoped>\n.current-price {\n  font-size: 1.5rem;\n  font-weight: bold;\n}\n.text-success { color: green; }\n.text-danger { color: red; }\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAgB;;EACpBA,KAAK,EAAC;AAAkB;;;uBAD/BC,mBAAA,CAQM,OARNC,UAQM,GAPJC,mBAAA,CAKM,OALNC,UAKM,G,0BAJJD,mBAAA,CAAiC,YAA7B,0BAAwB,QAC5BA,mBAAA,CAEI;IAFDH,KAAK,EAJdK,eAAA,EAIe,eAAe,EAASC,QAAA,CAAAC,cAAc;KAAE,kBAChC,GAAAC,gBAAA,CAAGC,KAAA,CAAAC,KAAK,OAAOD,KAAA,CAAAC,KAAK,uB,GAGrBC,IAAA,CAAAC,cAAc,a,cAAhCC,YAAA,CAA6CC,qBAAA;IARjDC,GAAA;EAAA,MAAAC,mBAAA,W","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}