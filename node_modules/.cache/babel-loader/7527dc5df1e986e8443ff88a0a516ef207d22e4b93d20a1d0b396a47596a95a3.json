{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport router from '../router'; // Adjust if your router path is different\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: 'http://localhost:5122/api' // Replace with your actual API base URL\n});\n\n// Request interceptor to attach token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Response interceptor to handle 401\napi.interceptors.response.use(response => response,\n// Pass through successful responses\nerror => {\n  if (error.response && error.response.status === 401) {\n    // Remove any invalid token\n    localStorage.removeItem('token');\n\n    // Redirect to login page\n    router.push('/login');\n  }\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","router","api","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","response","error","status","removeItem","push","Promise","reject"],"sources":["/Users/veselinlazarov/projects/CryptoDashboard/crypto-dashboard-frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\nimport router from '../router'; // Adjust if your router path is different\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: 'http://localhost:5122/api', // Replace with your actual API base URL\n});\n\n// Request interceptor to attach token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Response interceptor to handle 401\napi.interceptors.response.use(\n  response => response, // Pass through successful responses\n  error => {\n    if (error.response && error.response.status === 401) {\n      // Remove any invalid token\n      localStorage.removeItem('token');\n      \n      // Redirect to login page\n      router.push('/login');\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport default api;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,WAAW,CAAC,CAAC;;AAEhC;AACA,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAE,2BAA2B,CAAE;AACxC,CAAC,CAAC;;AAEF;AACAF,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAACC,MAAM,IAAI;EACrC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;;AAEF;AACAN,GAAG,CAACG,YAAY,CAACS,QAAQ,CAACP,GAAG,CAC3BO,QAAQ,IAAIA,QAAQ;AAAE;AACtBC,KAAK,IAAI;EACP,IAAIA,KAAK,CAACD,QAAQ,IAAIC,KAAK,CAACD,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;IACnD;IACAN,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC;;IAEhC;IACAhB,MAAM,CAACiB,IAAI,CAAC,QAAQ,CAAC;EACvB;EACA,OAAOC,OAAO,CAACC,MAAM,CAACL,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeb,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}