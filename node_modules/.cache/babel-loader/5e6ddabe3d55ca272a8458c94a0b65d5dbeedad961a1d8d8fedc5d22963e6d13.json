{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { useRouter } from 'vue-router';\nimport { useStore } from 'vuex';\nimport { ref } from 'vue';\nexport default {\n  name: 'LoginPage',\n  setup() {\n    const router = useRouter();\n    const store = useStore();\n    const email = ref('');\n    const password = ref('');\n    const handleSubmit = async () => {\n      await store.dispatch('login', {\n        email: email.value,\n        password: password.value\n      });\n      if (store.getters.isAuthenticated) {\n        router.push('/'); // Redirect to home page if authenticated\n      } else {\n        // Optionally handle error here (e.g., show a message)\n        console.error('Login failed. Please check your credentials.');\n      }\n    };\n    return {\n      email,\n      password,\n      handleSubmit\n    }; // Return handleSubmit here\n  }\n};","map":{"version":3,"names":["useRouter","useStore","ref","name","setup","router","store","email","password","handleSubmit","dispatch","value","getters","isAuthenticated","push","console","error"],"sources":["/Users/veselinlazarov/projects/CryptoDashboard/crypto-dashboard-frontend/src/views/Login.vue"],"sourcesContent":["<template>\n  <div class=\"container mt-5\">\n    <h2 class=\"text-center\">Login</h2>\n    <form @submit.prevent=\"handleSubmit\" class=\"w-50 mx-auto\">\n      <div class=\"form-group mb-3\">\n        <label for=\"email\">Email</label>\n        <input\n          type=\"email\"\n          v-model=\"email\"\n          id=\"email\"\n          class=\"form-control\"\n          required\n        />\n      </div>\n      <div class=\"form-group mb-3\">\n        <label for=\"password\">Password</label>\n        <input\n          type=\"password\"\n          v-model=\"password\"\n          id=\"password\"\n          class=\"form-control\"\n          required\n        />\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary w-100\">Login</button>\n    </form>\n    <p class=\"text-center mt-3\">\n      Don't have an account? <router-link to=\"/register\">Register here</router-link>\n    </p>\n  </div>\n</template>\n\n<script>\nimport { useRouter } from 'vue-router';\nimport { useStore } from 'vuex';\nimport { ref } from 'vue';\n\nexport default {\n  name: 'LoginPage',\n  setup() {\n    const router = useRouter();\n    const store = useStore();\n    const email = ref('');\n    const password = ref('');\n\n    const handleSubmit = async () => {\n      await store.dispatch('login', { email: email.value, password: password.value });\n      if (store.getters.isAuthenticated) {\n        router.push('/'); // Redirect to home page if authenticated\n      } else {\n        // Optionally handle error here (e.g., show a message)\n        console.error('Login failed. Please check your credentials.');\n      }\n    };\n\n    return { email, password, handleSubmit }; // Return handleSubmit here\n  },\n};\n</script>\n\n<style scoped>\n/* You can add any additional styling here */\n</style>"],"mappings":";AAiCA,SAASA,SAAQ,QAAS,YAAY;AACtC,SAASC,QAAO,QAAS,MAAM;AAC/B,SAASC,GAAE,QAAS,KAAK;AAEzB,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,KAAKA,CAAA,EAAG;IACN,MAAMC,MAAK,GAAIL,SAAS,CAAC,CAAC;IAC1B,MAAMM,KAAI,GAAIL,QAAQ,CAAC,CAAC;IACxB,MAAMM,KAAI,GAAIL,GAAG,CAAC,EAAE,CAAC;IACrB,MAAMM,QAAO,GAAIN,GAAG,CAAC,EAAE,CAAC;IAExB,MAAMO,YAAW,GAAI,MAAAA,CAAA,KAAY;MAC/B,MAAMH,KAAK,CAACI,QAAQ,CAAC,OAAO,EAAE;QAAEH,KAAK,EAAEA,KAAK,CAACI,KAAK;QAAEH,QAAQ,EAAEA,QAAQ,CAACG;MAAM,CAAC,CAAC;MAC/E,IAAIL,KAAK,CAACM,OAAO,CAACC,eAAe,EAAE;QACjCR,MAAM,CAACS,IAAI,CAAC,GAAG,CAAC,EAAE;MACpB,OAAO;QACL;QACAC,OAAO,CAACC,KAAK,CAAC,8CAA8C,CAAC;MAC/D;IACF,CAAC;IAED,OAAO;MAAET,KAAK;MAAEC,QAAQ;MAAEC;IAAa,CAAC,EAAE;EAC5C;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}