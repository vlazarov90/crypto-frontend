{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapActions } from 'vuex';\nexport default {\n  name: 'RegisterPage',\n  data() {\n    return {\n      email: '',\n      password: '',\n      confirmPassword: '',\n      errorMessage: ''\n    };\n  },\n  methods: {\n    ...mapActions(['register']),\n    async registerUser() {\n      if (this.password !== this.confirmPassword) {\n        this.errorMessage = \"Passwords do not match\";\n        return;\n      }\n      try {\n        await this.register({\n          email: this.email,\n          password: this.password\n        });\n        this.$router.push('/'); // Redirect to home or any other page\n      } catch (error) {\n        this.errorMessage = \"Registration failed. Please try again.\";\n      }\n    }\n  }\n};","map":{"version":3,"names":["mapActions","name","data","email","password","confirmPassword","errorMessage","methods","registerUser","register","$router","push","error"],"sources":["/Users/veselinlazarov/projects/CryptoDashboard/crypto-dashboard-frontend/src/views/Register.vue"],"sourcesContent":["<template>\n  <div class=\"container mt-5\">\n    <h2>Register</h2>\n    <form @submit.prevent=\"registerUser\">\n      <div class=\"mb-3\">\n        <label for=\"email\" class=\"form-label\">Email</label>\n        <input type=\"email\" v-model=\"email\" class=\"form-control\" id=\"email\" required />\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"password\" class=\"form-label\">Password</label>\n        <input type=\"password\" v-model=\"password\" class=\"form-control\" id=\"password\" required />\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"confirmPassword\" class=\"form-label\">Confirm Password</label>\n        <input type=\"password\" v-model=\"confirmPassword\" class=\"form-control\" id=\"confirmPassword\" required />\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary\">Register</button>\n      <div v-if=\"errorMessage\" class=\"text-danger mt-3\">{{ errorMessage }}</div>\n    </form>\n  </div>\n</template>\n\n<script>\nimport { mapActions } from 'vuex';\n\nexport default {\n  name: 'RegisterPage',\n  data() {\n    return {\n      email: '',\n      password: '',\n      confirmPassword: '',\n      errorMessage: '',\n    };\n  },\n  methods: {\n    ...mapActions(['register']),\n    async registerUser() {\n      if (this.password !== this.confirmPassword) {\n        this.errorMessage = \"Passwords do not match\";\n        return;\n      }\n\n      try {\n        await this.register({ email: this.email, password: this.password });\n        this.$router.push('/'); // Redirect to home or any other page\n      } catch (error) {\n        this.errorMessage = \"Registration failed. Please try again.\";\n      }\n    },\n  },\n};\n</script>\n\n<style>\n/* Add any additional styles if needed */\n</style>"],"mappings":";AAuBA,SAASA,UAAS,QAAS,MAAM;AAEjC,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,eAAe,EAAE,EAAE;MACnBC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,GAAGP,UAAU,CAAC,CAAC,UAAU,CAAC,CAAC;IAC3B,MAAMQ,YAAYA,CAAA,EAAG;MACnB,IAAI,IAAI,CAACJ,QAAO,KAAM,IAAI,CAACC,eAAe,EAAE;QAC1C,IAAI,CAACC,YAAW,GAAI,wBAAwB;QAC5C;MACF;MAEA,IAAI;QACF,MAAM,IAAI,CAACG,QAAQ,CAAC;UAAEN,KAAK,EAAE,IAAI,CAACA,KAAK;UAAEC,QAAQ,EAAE,IAAI,CAACA;QAAS,CAAC,CAAC;QACnE,IAAI,CAACM,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC,EAAE;MAC1B,EAAE,OAAOC,KAAK,EAAE;QACd,IAAI,CAACN,YAAW,GAAI,wCAAwC;MAC9D;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}