{"ast":null,"code":"import { Line } from 'vue-chartjs';\nimport { mapGetters } from 'vuex';\nimport { Chart as ChartJS, CategoryScale, LinearScale, TimeScale, PointElement, LineElement, Filler, Tooltip, Legend } from 'chart.js';\n\n// Register the required scales and components\nChartJS.register(CategoryScale, LinearScale, TimeScale, PointElement, LineElement, Filler, Tooltip, Legend);\nexport default {\n  components: {\n    LineChart: Line\n  },\n  computed: {\n    ...mapGetters(['historicalData']),\n    chartData() {\n      if (!this.historicalData || !this.historicalData.bpi) {\n        return {\n          labels: [],\n          datasets: [{\n            label: 'Bitcoin Price',\n            backgroundColor: '#42A5F5',\n            borderColor: '#1E88E5',\n            data: []\n          }]\n        };\n      }\n      const bpiArray = Object.entries(this.historicalData.bpi).map(([date, price]) => ({\n        date,\n        price\n      }));\n      return {\n        labels: bpiArray.map(entry => entry.date),\n        datasets: [{\n          label: 'Bitcoin Price',\n          backgroundColor: '#42A5F5',\n          borderColor: '#1E88E5',\n          data: bpiArray.map(entry => entry.price)\n        }]\n      };\n    }\n  },\n  data() {\n    return {\n      chartOptions: {\n        responsive: true,\n        maintainAspectRatio: false,\n        scales: {\n          x: {\n            type: 'time',\n            // Ensure you're using 'time' for date values\n            time: {\n              unit: 'day' // Adjust as needed\n            }\n          },\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    };\n  }\n};","map":{"version":3,"names":["Line","mapGetters","Chart","ChartJS","CategoryScale","LinearScale","TimeScale","PointElement","LineElement","Filler","Tooltip","Legend","register","components","LineChart","computed","chartData","historicalData","bpi","labels","datasets","label","backgroundColor","borderColor","data","bpiArray","Object","entries","map","date","price","entry","chartOptions","responsive","maintainAspectRatio","scales","x","type","time","unit","y","beginAtZero"],"sources":["/Users/veselinlazarov/projects/CryptoDashboard/crypto-dashboard-frontend/src/components/PriceChart.vue"],"sourcesContent":["<template>\n    <div>\n      <LineChart :data=\"chartData\" :chartOptions=\"chartOptions\" />\n    </div>\n  </template>\n  \n  <script>\n  import { Line } from 'vue-chartjs'\n  import { mapGetters } from 'vuex'\n  import {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    TimeScale,\n    PointElement,\n    LineElement,\n    Filler,\n    Tooltip,\n    Legend\n  } from 'chart.js';\n  \n  // Register the required scales and components\n  ChartJS.register(CategoryScale, LinearScale, TimeScale, PointElement, LineElement, Filler, Tooltip, Legend);\n  \n  export default {\n    components: {\n      LineChart: Line,\n    },\n    computed: {\n      ...mapGetters(['historicalData']),\n      chartData() {\n        if (!this.historicalData || !this.historicalData.bpi) {\n          return {\n            labels: [],\n            datasets: [\n              {\n                label: 'Bitcoin Price',\n                backgroundColor: '#42A5F5',\n                borderColor: '#1E88E5',\n                data: []\n              }\n            ]\n          };\n        }\n  \n        const bpiArray = Object.entries(this.historicalData.bpi).map(([date, price]) => ({ date, price }));\n  \n        return {\n          labels: bpiArray.map(entry => entry.date),\n          datasets: [\n            {\n              label: 'Bitcoin Price',\n              backgroundColor: '#42A5F5',\n              borderColor: '#1E88E5',\n              data: bpiArray.map(entry => entry.price)\n            }\n          ]\n        };\n      }\n    },\n    data() {\n      return {\n        chartOptions: {\n          responsive: true,\n          maintainAspectRatio: false,\n          scales: {\n            x: {\n              type: 'time', // Ensure you're using 'time' for date values\n              time: {\n                unit: 'day' // Adjust as needed\n              }\n            },\n            y: {\n              beginAtZero: true\n            }\n          }\n        }\n      }\n    }\n  }\n  </script>\n  \n  <style scoped>\n  .chart-container {\n    position: relative;\n    height: 400px;\n  }\n  </style>"],"mappings":"AAOE,SAASA,IAAG,QAAS,aAAY;AACjC,SAASC,UAAS,QAAS,MAAK;AAChC,SACEC,KAAI,IAAKC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,SAAS,EACTC,YAAY,EACZC,WAAW,EACXC,MAAM,EACNC,OAAO,EACPC,MAAK,QACA,UAAU;;AAEjB;AACAR,OAAO,CAACS,QAAQ,CAACR,aAAa,EAAEC,WAAW,EAAEC,SAAS,EAAEC,YAAY,EAAEC,WAAW,EAAEC,MAAM,EAAEC,OAAO,EAAEC,MAAM,CAAC;AAE3G,eAAe;EACbE,UAAU,EAAE;IACVC,SAAS,EAAEd;EACb,CAAC;EACDe,QAAQ,EAAE;IACR,GAAGd,UAAU,CAAC,CAAC,gBAAgB,CAAC,CAAC;IACjCe,SAASA,CAAA,EAAG;MACV,IAAI,CAAC,IAAI,CAACC,cAAa,IAAK,CAAC,IAAI,CAACA,cAAc,CAACC,GAAG,EAAE;QACpD,OAAO;UACLC,MAAM,EAAE,EAAE;UACVC,QAAQ,EAAE,CACR;YACEC,KAAK,EAAE,eAAe;YACtBC,eAAe,EAAE,SAAS;YAC1BC,WAAW,EAAE,SAAS;YACtBC,IAAI,EAAE;UACR;QAEJ,CAAC;MACH;MAEA,MAAMC,QAAO,GAAIC,MAAM,CAACC,OAAO,CAAC,IAAI,CAACV,cAAc,CAACC,GAAG,CAAC,CAACU,GAAG,CAAC,CAAC,CAACC,IAAI,EAAEC,KAAK,CAAC,MAAM;QAAED,IAAI;QAAEC;MAAM,CAAC,CAAC,CAAC;MAElG,OAAO;QACLX,MAAM,EAAEM,QAAQ,CAACG,GAAG,CAACG,KAAI,IAAKA,KAAK,CAACF,IAAI,CAAC;QACzCT,QAAQ,EAAE,CACR;UACEC,KAAK,EAAE,eAAe;UACtBC,eAAe,EAAE,SAAS;UAC1BC,WAAW,EAAE,SAAS;UACtBC,IAAI,EAAEC,QAAQ,CAACG,GAAG,CAACG,KAAI,IAAKA,KAAK,CAACD,KAAK;QACzC;MAEJ,CAAC;IACH;EACF,CAAC;EACDN,IAAIA,CAAA,EAAG;IACL,OAAO;MACLQ,YAAY,EAAE;QACZC,UAAU,EAAE,IAAI;QAChBC,mBAAmB,EAAE,KAAK;QAC1BC,MAAM,EAAE;UACNC,CAAC,EAAE;YACDC,IAAI,EAAE,MAAM;YAAE;YACdC,IAAI,EAAE;cACJC,IAAI,EAAE,KAAI,CAAE;YACd;UACF,CAAC;UACDC,CAAC,EAAE;YACDC,WAAW,EAAE;UACf;QACF;MACF;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}